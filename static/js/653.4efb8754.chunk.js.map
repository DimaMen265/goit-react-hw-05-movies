{"version":3,"file":"static/js/653.4efb8754.chunk.js","mappings":"qSACA,GAAgB,WAAa,2BAA2B,YAAc,4BAA4B,aAAe,6BAA6B,WAAa,2BAA2B,WAAa,2BAA2B,cAAgB,+B,SCO1OA,GAASC,EAAAA,EAAAA,IAAO,CAChBC,cAAcC,EAAAA,EAAAA,MAASC,aAsE3B,EAnEe,WACX,IAAAC,GAA4BC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,GAAWC,EAAAA,EAAAA,MAMXC,EAAW,SAAAhB,GAEba,EADsC,KAAjBb,EAAsB,CAAEiB,OAAQjB,GAAiB,CAAC,EAE3E,EA6BA,OA3BAkB,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAkB,IAAIC,gBACtBpB,EAAeY,EAAaS,IAAI,UAEtC,GAAKrB,EAAL,CAKA,IAAMsB,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAO1B,EAAcmB,GAAe,IAAAQ,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAE5BC,EAAAA,EAAAA,IAAgB/B,EAAcmB,GAAiB,KAAD,EAA3DQ,EAAIC,EAAAI,KACVxB,EAAUmB,EAAKM,KAAKC,SAASN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEP,aAAlBA,EAAAO,GAAMC,SACNC,EAAAA,GAAAA,MAAYT,EAAAO,GAAMC,SACpB,QACJ,yBAAAR,EAAAU,OAAA,GAAAZ,EAAA,kBACL,gBATea,EAAAC,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,KAahB,OAFApB,EAAWtB,EAAcmB,GAElB,WACHA,EAAgBwB,OACpB,CAjBA,CAFInC,EAAU,KAoBlB,GAAG,CAACI,KAGAgC,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,cAAe,CAAEhD,aAAc,IAAMgB,SAtChC,SAAAiC,GACjBjC,EAASiC,EAAOjD,aAAakD,OACjC,EAoC6EC,iBAAkBrD,EAAO+C,UAC1FD,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAACC,UAAWC,EAAAA,WAAkBT,SAAA,EAC/BC,EAAAA,EAAAA,KAACS,EAAAA,GAAK,CAACC,KAAK,OAAOC,KAAK,eAAeC,YAAY,gBAAgBL,UAAWC,EAAAA,eAC9ER,EAAAA,EAAAA,KAAA,UAAQU,KAAK,SAASH,UAAWC,EAAAA,aAAoBT,SAAC,iBAI9DC,EAAAA,EAAAA,KAAA,MAAIO,UAAWC,EAAAA,WAAkBT,SAEzBtC,GACAA,EAAOoD,KAAI,SAAAC,GAAI,OACXhB,EAAAA,EAAAA,MAAA,MAAkBS,UAAWC,EAAAA,WAAkBT,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,OAAKe,IAAG,GAAAC,OAAKC,EAAAA,IAAcD,OAAGE,EAAAA,IAAaF,OAAGF,EAAKK,aAAeC,IAAKN,EAAKO,SAC5ErB,EAAAA,EAAAA,KAAA,OAAKO,UAAWC,EAAAA,cAAqBT,UACjCC,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACC,GAAE,WAAAP,OAAaF,EAAKU,IAAMC,MAAO,CAAEC,KAAM1D,GAAYuC,UAAWC,EAAAA,WAAkBT,SAAEe,EAAKO,YAH9FP,EAAKU,GAKT,QAM7B,C","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Movies_searchForm__S-9T7\",\"searchInput\":\"Movies_searchInput__+E-Mw\",\"searchButton\":\"Movies_searchButton__VlmGO\",\"searchList\":\"Movies_searchList__6eDvk\",\"searchItem\":\"Movies_searchItem__aEEd+\",\"linkContainer\":\"Movies_linkContainer__WlvGd\"};","import { getSearchMovies, DEF_PATH_IMAGE, DEF_LOGO_SIZE } from \"components/api\";\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams, useLocation, Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Formik, Form, Field } from \"formik\";\nimport { object, string } from \"yup\";\nimport styles from \"./Movies.module.css\";\n\nlet schema = object({\n    searchString: string().required(),\n});\n\nconst Movies = () => {\n    const [movies, setMovies] = useState();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n\n    const handleSubmit = values => {\n        onSubmit(values.searchString.trim());\n    };\n\n    const onSubmit = searchString => {\n        const searchParams = searchString !== \"\" ? { search: searchString } : {};\n        setSearchParams(searchParams);\n    };\n\n    useEffect(() => {\n        const abortController = new AbortController();\n        const searchString = searchParams.get(\"search\");\n\n        if (!searchString) {\n            setMovies(null);\n            return;\n        };\n\n        const searchList = async (searchString, abortController) => {\n            try {\n                const list = await getSearchMovies(searchString, abortController);\n                setMovies(list.data.results);\n            } catch (error) {\n                if (error.message !== \"canceled\") {\n                    toast.error(error.message);\n                };\n            };\n        };\n\n        searchList(searchString, abortController);\n\n        return () => {\n            abortController.abort();\n        };\n    }, [searchParams]);\n\n    return (\n        <main>\n            <Formik initialValues={{ searchString: \"\" }} onSubmit={handleSubmit} validationSchema={schema}>\n                <Form className={styles.searchForm}>\n                    <Field type=\"text\" name=\"searchString\" placeholder=\"Search movies\" className={styles.searchInput} />\n                    <button type=\"submit\" className={styles.searchButton}>Search</button>\n                </Form>\n            </Formik>\n            \n            <ul className={styles.searchList}>\n                {\n                    movies &&\n                    movies.map(item => (\n                        <li key={item.id} className={styles.searchItem}>\n                            <img src={`${DEF_PATH_IMAGE}${DEF_LOGO_SIZE}${item.poster_path}`} alt={item.title} />\n                            <div className={styles.linkContainer}>\n                                <Link to={`/movies/${item.id}`} state={{ from: location }} className={styles.searchLink}>{item.title}</Link>\n                            </div>\n                        </li>\n                    ))\n                }\n            </ul>\n        </main>\n    );\n};\n\nexport default Movies;\n"],"names":["schema","object","searchString","string","required","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","onSubmit","search","useEffect","abortController","AbortController","get","searchList","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","list","_context","prev","next","getSearchMovies","sent","data","results","t0","message","toast","stop","_x","_x2","apply","arguments","abort","_jsxs","children","_jsx","Formik","initialValues","values","trim","validationSchema","Form","className","styles","Field","type","name","placeholder","map","item","src","concat","DEF_PATH_IMAGE","DEF_LOGO_SIZE","poster_path","alt","title","Link","to","id","state","from"],"sourceRoot":""}